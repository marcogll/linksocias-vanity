"use strict";let r=!1,t=!1;const o=new class{constructor(){this.queue=[],this.isExecuting=!1,this.add=r=>{this.queue.push(r),this.run()},this.runNext=async()=>{if(this.isExecuting)return;const r=this.queue.shift();if(r){this.isExecuting=!0;try{await r()}finally{this.isExecuting=!1,this.queue.length>0&&this.runNext()}}},this.run=async()=>{!this.isExecuting&&this.queue.length>0&&await this.runNext()},this.clear=()=>{this.queue=[]}}},e=async(r,t)=>{if(!window.formbricks){const e=await fetch(`${r}/api/packages/${t}`);if(!e.ok)return{ok:!1,error:new Error(`Failed to load Formbricks ${t} SDK`)};const i=await e.text(),s=document.createElement("script");s.innerHTML=i,document.head.appendChild(s);const n=async()=>new Promise(((r,o)=>{const e=setInterval((()=>{window.formbricks&&(clearInterval(e),r())}),100);setTimeout((()=>{clearInterval(e),o(new Error(`Formbricks ${t} SDK loading timed out`))}),1e4)}));try{return await n(),{ok:!0,data:void 0}}catch(o){return{ok:!1,error:new Error(o.message??`Failed to load Formbricks ${t} SDK`)}}}return{ok:!0,data:void 0}};exports.loadFormbricksToProxy=async(i,s,...n)=>{const a=async()=>{try{return await window.formbricks[i](...n)}catch(r){throw console.error(`ðŸ§± Formbricks - Global error: ${r}`),r}};if(t)return window.formbricks&&"function"!=typeof window.formbricks[i]?void console.error(`ðŸ§± Formbricks - Global error: Formbricks ${s} SDK does not support method ${String(i)}`):void o.add(a);if(r)o.add(a);else{if("init"!==i)return void console.error("ðŸ§± Formbricks - Global error: You need to call formbricks.init before calling any other method");{r=!0;const a=async()=>{const{apiHost:o}=n[0],a=await(c=e,async(...r)=>{try{return{ok:!0,data:await c(...r)}}catch(t){return{ok:!1,error:t}}})(o,s);var c;if(!a.ok)return r=!1,void console.error(`ðŸ§± Formbricks - Global error: ${a.error.message}`);try{const o=await window.formbricks[i](...n);return t=!0,r=!1,o}catch(u){throw r=!1,console.error(`ðŸ§± Formbricks - Global error: ${u}`),u}};o.add(a)}}};
//# sourceMappingURL=loadFormbricks-CdxDGQiG.cjs.map
