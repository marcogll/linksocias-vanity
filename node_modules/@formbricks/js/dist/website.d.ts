import z from 'zod';

declare const formbricks: {
    init: (initConfig: TJsWebsiteConfigInput) => Promise<void>;
    track: (name: string, properties?: any) => Promise<void>;
    reset: () => Promise<void>;
    registerRouteChange: () => Promise<void>;
};

declare const formbricksWebsite: TFormbricksWebsite;
export default formbricksWebsite;

declare type TFormbricksWebsite = typeof formbricks;

declare type TJsWebsiteConfigInput = z.infer<typeof ZJsWebsiteConfigInput>;

declare const ZJsWebsiteConfigInput = z.object({
    environmentId: z.string().cuid(),
    apiHost: z.string(),
    errorHandler: z.function().args(z.any()).returns(z.void()).optional(),
    attributes: z.record(z.string()).optional(),
});

export { }


declare global {
    interface Window {
        formbricks: TFormbricksApp | TFormbricksWebsite;
    }
}


declare global {
    interface Window {
        formbricks: TFormbricksApp | TFormbricksWebsite;
    }
}

